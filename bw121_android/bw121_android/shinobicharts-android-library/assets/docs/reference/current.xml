<api>
<package name="com.shinobicontrols.charts"
>
<class name="Annotation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getPosition"
 return="com.shinobicontrols.charts.Annotation.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.shinobicontrols.charts.AnnotationStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getView"
 return="android.view.View"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXRange"
 return="com.shinobicontrols.charts.Range&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXValue"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getYAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getYRange"
 return="com.shinobicontrols.charts.Range&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getYValue"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="position" type="com.shinobicontrols.charts.Annotation.Position">
</parameter>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.AnnotationStyle">
</parameter>
</method>
<method name="setXRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
</method>
<method name="setXValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="setYRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
</method>
<method name="setYValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="Annotation.Position"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Annotation.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Annotation.Position[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="AnnotationStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AnnotationStyle"
 type="com.shinobicontrols.charts.AnnotationStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backgroundColor" type="int">
</parameter>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textColor" type="int">
</parameter>
</method>
<method name="setTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textSize" type="float">
</parameter>
</method>
<method name="setTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeface" type="android.graphics.Typeface">
</parameter>
</method>
</class>
<class name="AnnotationsManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addBoxAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xRange" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
<parameter name="yRange" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addHorizontalBandAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="yRange" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addHorizontalLineAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="yValue" type="java.lang.Object">
</parameter>
<parameter name="thickness" type="float">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addTextAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text" type="java.lang.String">
</parameter>
<parameter name="xValue" type="java.lang.Object">
</parameter>
<parameter name="yValue" type="java.lang.Object">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addVerticalBandAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xRange" type="com.shinobicontrols.charts.Range&lt;?&gt;">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addVerticalLineAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xValue" type="java.lang.Object">
</parameter>
<parameter name="thickness" type="float">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addViewAnnotation"
 return="com.shinobicontrols.charts.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="view" type="android.view.View">
</parameter>
<parameter name="xValue" type="java.lang.Object">
</parameter>
<parameter name="yValue" type="java.lang.Object">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="getAnnotations"
 return="java.util.List&lt;com.shinobicontrols.charts.Annotation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="removeAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="com.shinobicontrols.charts.Annotation">
</parameter>
</method>
</class>
<class name="Axis"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="allowPanningOutOfDefaultRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="allowPanningOutOfDefaultRange" type="boolean">
</parameter>
</method>
<method name="allowPanningOutOfMaxRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="allowPanningOutOfMaxRange" type="boolean">
</parameter>
</method>
<method name="enableAnimation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="animationEnabled" type="boolean">
</parameter>
</method>
<method name="enableBouncingAtLimits"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bounceAtLimits" type="boolean">
</parameter>
</method>
<method name="enableGesturePanning"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enableGesturePanning" type="boolean">
</parameter>
</method>
<method name="enableGestureZooming"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enableGestureZooming" type="boolean">
</parameter>
</method>
<method name="enableMomentumPanning"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enableMomentumPanning" type="boolean">
</parameter>
</method>
<method name="enableMomentumZooming"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enableMomentumZooming" type="boolean">
</parameter>
</method>
<method name="getChart"
 return="com.shinobicontrols.charts.ShinobiChart"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentDisplayedRange"
 return="com.shinobicontrols.charts.Range&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentMajorTickFrequency"
 return="U"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentMinorTickFrequency"
 return="U"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDataRange"
 return="com.shinobicontrols.charts.Range&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDefaultRange"
 return="com.shinobicontrols.charts.Range&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExpectedLongestLabel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMajorTickFrequency"
 return="U"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMinorTickFrequency"
 return="U"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMotionState"
 return="com.shinobicontrols.charts.Axis.MotionState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOrientation"
 return="com.shinobicontrols.charts.Axis.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPixelValueForUserValue"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userValue" type="T">
</parameter>
</method>
<method name="getPosition"
 return="com.shinobicontrols.charts.Axis.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.shinobicontrols.charts.AxisStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTickMarkClippingModeHigh"
 return="com.shinobicontrols.charts.TickMark.ClippingMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTickMarkClippingModeLow"
 return="com.shinobicontrols.charts.TickMark.ClippingMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserValueForPixelValue"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixelValue" type="float">
</parameter>
</method>
<method name="isAnimationEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isBouncingAtLimitsEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isCurrentDisplayedRangePreservedOnUpdate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isGesturePanningEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isGestureZoomingEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isMomentumPanningEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isMomentumZoomingEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPanningOutOfDefaultRangeAllowed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPanningOutOfMaxRangeAllowed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="requestCurrentDisplayedRange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimum" type="T">
</parameter>
<parameter name="maximum" type="T">
</parameter>
</method>
<method name="requestCurrentDisplayedRange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimum" type="T">
</parameter>
<parameter name="maximum" type="T">
</parameter>
<parameter name="animation" type="boolean">
</parameter>
<parameter name="bounceAtLimits" type="boolean">
</parameter>
</method>
<method name="setCurrentDisplayedRangePreservedOnUpdate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="preserved" type="boolean">
</parameter>
</method>
<method name="setDefaultRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defaultRange" type="com.shinobicontrols.charts.Range&lt;T&gt;">
</parameter>
</method>
<method name="setExpectedLongestLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="longestLabel" type="java.lang.String">
</parameter>
</method>
<method name="setMajorTickFrequency"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="majorTickFrequency" type="U">
</parameter>
</method>
<method name="setMinorTickFrequency"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minorTickFrequency" type="U">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axisPosition" type="com.shinobicontrols.charts.Axis.Position">
</parameter>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.AxisStyle">
</parameter>
</method>
<method name="setTickMarkClippingModeHigh"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tickLabelClippingModeHigh" type="com.shinobicontrols.charts.TickMark.ClippingMode">
</parameter>
</method>
<method name="setTickMarkClippingModeLow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tickLabelClippingModeLow" type="com.shinobicontrols.charts.TickMark.ClippingMode">
</parameter>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
</method>
<method name="specifyBarColumnSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="spacing" type="U">
</parameter>
</method>
</class>
<class name="Axis.MotionState"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Axis.MotionState"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Axis.MotionState[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Axis.Orientation"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Axis.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Axis.Orientation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Axis.Position"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Axis.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Axis.Position[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="AxisStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AxisStyle"
 type="com.shinobicontrols.charts.AxisStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getGridStripeStyle"
 return="com.shinobicontrols.charts.GridStripeStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGridlineStyle"
 return="com.shinobicontrols.charts.GridlineStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInterSeriesPadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInterSeriesSetPadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTickStyle"
 return="com.shinobicontrols.charts.TickStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleStyle"
 return="com.shinobicontrols.charts.AxisTitleStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setGridStripeStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gridStripeStyle" type="com.shinobicontrols.charts.GridStripeStyle">
</parameter>
</method>
<method name="setGridlineStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gridlineStyle" type="com.shinobicontrols.charts.GridlineStyle">
</parameter>
</method>
<method name="setInterSeriesPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interSeriesPadding" type="float">
</parameter>
</method>
<method name="setInterSeriesSetPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interSeriesSetPadding" type="float">
</parameter>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColor" type="int">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineWidth" type="float">
</parameter>
</method>
<method name="setTickStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tickStyle" type="com.shinobicontrols.charts.TickStyle">
</parameter>
</method>
<method name="setTitleStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleStyle" type="com.shinobicontrols.charts.AxisTitleStyle">
</parameter>
</method>
</class>
<class name="AxisTitleStyle"
 extends="com.shinobicontrols.charts.TitleStyle"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AxisTitleStyle"
 type="com.shinobicontrols.charts.AxisTitleStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getOrientation"
 return="com.shinobicontrols.charts.Title.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setOrientation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orientation" type="com.shinobicontrols.charts.Title.Orientation">
</parameter>
</method>
</class>
<class name="BandSeries"
 extends="com.shinobicontrols.charts.CartesianSeries"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BandSeries"
 type="com.shinobicontrols.charts.BandSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="BandSeries"
 type="com.shinobicontrols.charts.BandSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orientation" type="com.shinobicontrols.charts.Series.Orientation">
</parameter>
</constructor>
</class>
<class name="BandSeriesStyle"
 extends="com.shinobicontrols.charts.SeriesStyle"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BandSeriesStyle"
 type="com.shinobicontrols.charts.BandSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAreaColorInverted"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaColorNormal"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColorHigh"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColorLow"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPointStyle"
 return="com.shinobicontrols.charts.PointStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectedPointStyle"
 return="com.shinobicontrols.charts.PointStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFillShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAreaColorInverted"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setAreaColorNormal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setFillShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shown" type="boolean">
</parameter>
</method>
<method name="setLineColorHigh"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setLineColorLow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="float">
</parameter>
</method>
<method name="setPointStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.PointStyle">
</parameter>
</method>
<method name="setSelectedPointStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.PointStyle">
</parameter>
</method>
</class>
<class name="BarSeries"
 extends="com.shinobicontrols.charts.BarColumnSeries"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BarSeries"
 type="com.shinobicontrols.charts.BarSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="BarSeriesStyle"
 extends="com.shinobicontrols.charts.BarColumnSeriesStyle"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BarSeriesStyle"
 type="com.shinobicontrols.charts.BarSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="BuildConfig"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BuildConfig"
 type="com.shinobicontrols.charts.BuildConfig"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="DEBUG"
 type="boolean"
 transient="false"
 volatile="false"
 value="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="CandlestickSeries"
 extends="com.shinobicontrols.charts.BarColumnSeries"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CandlestickSeries"
 type="com.shinobicontrols.charts.CandlestickSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="CandlestickSeriesStyle"
 extends="com.shinobicontrols.charts.SeriesStyle"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CandlestickSeriesStyle"
 type="com.shinobicontrols.charts.CandlestickSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getFallingColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFallingColorGradient"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOutlineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOutlineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRisingColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRisingColorGradient"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStickColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStickWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setFallingColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setFallingColorGradient"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setOutlineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setOutlineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="float">
</parameter>
</method>
<method name="setRisingColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setRisingColorGradient"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setStickColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setStickWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="float">
</parameter>
</method>
</class>
<class name="CartesianSeries"
 extends="com.shinobicontrols.charts.Series"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getOrientation"
 return="com.shinobicontrols.charts.Series.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStackId"
 return="java.lang.Integer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isCrosshairEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCrosshairEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="crosshairEnabled" type="boolean">
</parameter>
</method>
<method name="setStackId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stackId" type="java.lang.Integer">
</parameter>
</method>
</class>
<class name="CategoryAxis"
 extends="com.shinobicontrols.charts.NumberAxis"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CategoryAxis"
 type="com.shinobicontrols.charts.CategoryAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="CategoryAxis"
 type="com.shinobicontrols.charts.CategoryAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range" type="com.shinobicontrols.charts.NumberRange">
</parameter>
</constructor>
<method name="getCategories"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="requestCurrentDisplayedRange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimum" type="int">
</parameter>
<parameter name="maximum" type="int">
</parameter>
</method>
<method name="requestCurrentDisplayedRange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimum" type="int">
</parameter>
<parameter name="maximum" type="int">
</parameter>
<parameter name="animation" type="boolean">
</parameter>
<parameter name="bounceAtLimits" type="boolean">
</parameter>
</method>
</class>
<class name="ChartFragment"
 extends="com.shinobicontrols.charts.ChartFragmentBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ChartFragment"
 type="com.shinobicontrols.charts.ChartFragment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getShinobiChart"
 return="com.shinobicontrols.charts.ShinobiChart"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateView"
 return="android.view.View"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="inflater" type="android.view.LayoutInflater">
</parameter>
<parameter name="container" type="android.view.ViewGroup">
</parameter>
<parameter name="savedInstanceState" type="android.os.Bundle">
</parameter>
</method>
<method name="onDestroyView"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ChartStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ChartStyle"
 type="com.shinobicontrols.charts.ChartStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCanvasBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPlotAreaBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backgroundColor" type="int">
</parameter>
</method>
<method name="setCanvasBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvasBackgroundColor" type="int">
</parameter>
</method>
<method name="setPlotAreaBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="plotAreaBackgroundColor" type="int">
</parameter>
</method>
</class>
<class name="ChartUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="drawText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvas" type="android.graphics.Canvas">
</parameter>
<parameter name="labelText" type="java.lang.String">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="labelPaint" type="android.graphics.Paint">
</parameter>
</method>
<method name="drawTextBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvas" type="android.graphics.Canvas">
</parameter>
<parameter name="backgroundLabelRect" type="android.graphics.Rect">
</parameter>
<parameter name="backgroundLabelPaint" type="android.graphics.Paint">
</parameter>
</method>
</class>
<class name="ChartView"
 extends="com.shinobicontrols.charts.ChartViewBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ChartView"
 type="com.shinobicontrols.charts.ChartView"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
</constructor>
<constructor name="ChartView"
 type="com.shinobicontrols.charts.ChartView"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="attrs" type="android.util.AttributeSet">
</parameter>
</constructor>
<constructor name="ChartView"
 type="com.shinobicontrols.charts.ChartView"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="android.content.Context">
</parameter>
<parameter name="attrs" type="android.util.AttributeSet">
</parameter>
<parameter name="defStyle" type="int">
</parameter>
</constructor>
</class>
<class name="ColumnSeries"
 extends="com.shinobicontrols.charts.BarColumnSeries"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColumnSeries"
 type="com.shinobicontrols.charts.ColumnSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="ColumnSeriesStyle"
 extends="com.shinobicontrols.charts.BarColumnSeriesStyle"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColumnSeriesStyle"
 type="com.shinobicontrols.charts.ColumnSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="Crosshair"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getPixelXValue"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPixelYValue"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.shinobicontrols.charts.CrosshairStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrackingSeries"
 return="com.shinobicontrols.charts.CartesianSeries&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserXValue"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserYValue"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isActive"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.CrosshairStyle">
</parameter>
</method>
</class>
<class name="CrosshairStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CrosshairStyle"
 type="com.shinobicontrols.charts.CrosshairStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipBorderColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipBorderWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipCornerRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipLabelBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipPadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipTextColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTooltipTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColor" type="int">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineWidth" type="float">
</parameter>
</method>
<method name="setTooltipBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipBackgroundColor" type="int">
</parameter>
</method>
<method name="setTooltipBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipBorderColor" type="int">
</parameter>
</method>
<method name="setTooltipBorderWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipBorderWidth" type="float">
</parameter>
</method>
<method name="setTooltipCornerRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipCornerRadius" type="float">
</parameter>
</method>
<method name="setTooltipLabelBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipLabelBackgroundColor" type="int">
</parameter>
</method>
<method name="setTooltipPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipPadding" type="float">
</parameter>
</method>
<method name="setTooltipTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipTextColor" type="int">
</parameter>
</method>
<method name="setTooltipTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipTextSize" type="float">
</parameter>
</method>
<method name="setTooltipTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tooltipTypeface" type="android.graphics.Typeface">
</parameter>
</method>
</class>
<interface name="Data"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getX"
 return="Tx"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getY"
 return="Ty"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="DataAdapter"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.Iterable">
</implements>
<constructor name="DataAdapter"
 type="com.shinobicontrols.charts.DataAdapter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</constructor>
<method name="add"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dataPoint" type="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;">
</parameter>
</method>
<method name="add"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="location" type="int">
</parameter>
<parameter name="dataPoint" type="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;">
</parameter>
</method>
<method name="addAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dataPoints" type="java.util.Collection&lt;? extends com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;&gt;">
</parameter>
</method>
<method name="addAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="location" type="int">
</parameter>
<parameter name="dataPoints" type="java.util.Collection&lt;? extends com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;&gt;">
</parameter>
</method>
<method name="clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="contains"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
</method>
<method name="containsAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collection" type="java.util.Collection&lt;?&gt;">
</parameter>
</method>
<method name="fireUpdateHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="get"
 return="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="location" type="int">
</parameter>
</method>
<method name="getDataPointsForDisplay"
 return="java.util.List&lt;com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="indexOf"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
</method>
<method name="isEmpty"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="iterator"
 return="java.util.Iterator&lt;com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="lastIndexOf"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
</method>
<method name="remove"
 return="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="location" type="int">
</parameter>
</method>
<method name="remove"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
</method>
<method name="removeAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collection" type="java.util.Collection&lt;?&gt;">
</parameter>
</method>
<method name="retainAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collection" type="java.util.Collection&lt;?&gt;">
</parameter>
</method>
<method name="set"
 return="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="location" type="int">
</parameter>
<parameter name="dataPoint" type="com.shinobicontrols.charts.Data&lt;Tx, Ty&gt;">
</parameter>
</method>
<method name="size"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="toArray"
 return="java.lang.Object[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="toArray"
 return="T[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="array" type="T[]">
</parameter>
</method>
</class>
<class name="DataPoint"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.shinobicontrols.charts.Data">
</implements>
<implements name="com.shinobicontrols.charts.SelectableData">
</implements>
<constructor name="DataPoint"
 type="com.shinobicontrols.charts.DataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="y" type="Ty">
</parameter>
</constructor>
<constructor name="DataPoint"
 type="com.shinobicontrols.charts.DataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="y" type="Ty">
</parameter>
<parameter name="selected" type="boolean">
</parameter>
</constructor>
<method name="getSelected"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getX"
 return="Tx"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getY"
 return="Ty"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DateFrequency"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DateFrequency"
 type="com.shinobicontrols.charts.DateFrequency"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="DateFrequency"
 type="com.shinobicontrols.charts.DateFrequency"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quantity" type="int">
</parameter>
<parameter name="denomination" type="com.shinobicontrols.charts.DateFrequency.Denomination">
</parameter>
</constructor>
<method name="clone"
 return="com.shinobicontrols.charts.DateFrequency"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDenomination"
 return="com.shinobicontrols.charts.DateFrequency.Denomination"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuantity"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDenomination"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="denomination" type="com.shinobicontrols.charts.DateFrequency.Denomination">
</parameter>
</method>
<method name="setQuantity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quantity" type="int">
</parameter>
</method>
</class>
<class name="DateFrequency.Denomination"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.DateFrequency.Denomination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.DateFrequency.Denomination[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DateRange"
 extends="com.shinobicontrols.charts.Range"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DateRange"
 type="com.shinobicontrols.charts.DateRange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="min" type="java.util.Date">
</parameter>
<parameter name="max" type="java.util.Date">
</parameter>
</constructor>
<method name="getMaximum"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMinimum"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DateTimeAxis"
 extends="com.shinobicontrols.charts.Axis"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DateTimeAxis"
 type="com.shinobicontrols.charts.DateTimeAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="DateTimeAxis"
 type="com.shinobicontrols.charts.DateTimeAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defaultRange" type="com.shinobicontrols.charts.DateRange">
</parameter>
</constructor>
<method name="getFormattedString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.util.Date">
</parameter>
</method>
<method name="getLabelFormat"
 return="java.text.DateFormat"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLabelFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateFormat" type="java.text.DateFormat">
</parameter>
</method>
<method name="transformChartValueToUserValue"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="chartValue" type="java.util.Date">
</parameter>
</method>
<method name="transformUserValueToChartValue"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="userValue" type="java.util.Date">
</parameter>
</method>
</class>
<class name="DonutSeries"
 extends="com.shinobicontrols.charts.PieDonutSeries"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DonutSeries"
 type="com.shinobicontrols.charts.DonutSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getInnerRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setInnerRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="innerRadius" type="float">
</parameter>
</method>
</class>
<class name="DonutSeriesStyle"
 extends="com.shinobicontrols.charts.PieDonutSeriesStyle"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DonutSeriesStyle"
 type="com.shinobicontrols.charts.DonutSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="GridStripeStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="GridStripeStyle"
 type="com.shinobicontrols.charts.GridStripeStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="areGridStripesShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAlternateStripeColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStripeColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAlternateStripeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="alternateStripeColor" type="int">
</parameter>
</method>
<method name="setGridStripesShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showGridStripes" type="boolean">
</parameter>
</method>
<method name="setStripeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stripeColor" type="int">
</parameter>
</method>
</class>
<class name="GridlineStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="GridlineStyle"
 type="com.shinobicontrols.charts.GridlineStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="areGridlinesDashed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="areGridlinesShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDashStyle"
 return="float[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDashStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dashStyle" type="float[]">
</parameter>
</method>
<method name="setGridlinesDashed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dashedGridlines" type="boolean">
</parameter>
</method>
<method name="setGridlinesShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showGridlines" type="boolean">
</parameter>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColor" type="int">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineWidth" type="float">
</parameter>
</method>
</class>
<class name="InvalidLicenseException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="InvalidLicenseException"
 type="com.shinobicontrols.charts.InvalidLicenseException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
</class>
<class name="Legend"
 extends="android.widget.LinearLayout"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getMaxSeriesPerRow"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPlacement"
 return="com.shinobicontrols.charts.Legend.Placement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPosition"
 return="com.shinobicontrols.charts.Legend.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.shinobicontrols.charts.LegendStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMaxSeriesPerRow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maxSeriesPerRow" type="int">
</parameter>
</method>
<method name="setPlacement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="placement" type="com.shinobicontrols.charts.Legend.Placement">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="position" type="com.shinobicontrols.charts.Legend.Position">
</parameter>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.LegendStyle">
</parameter>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
</method>
<field name="ALL"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="VARIABLE"
 type="int"
 transient="false"
 volatile="false"
 value="-2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Legend.Placement"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Legend.Placement"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Legend.Placement[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Legend.Position"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Legend.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Legend.Position[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Legend.SymbolAlignment"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Legend.SymbolAlignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Legend.SymbolAlignment[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="LegendStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LegendStyle"
 type="com.shinobicontrols.charts.LegendStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="areSymbolsShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBorderColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBorderWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCornerRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRowVerticalMargin"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSymbolAlignment"
 return="com.shinobicontrols.charts.Legend.SymbolAlignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSymbolCornerRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSymbolLabelGap"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSymbolWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextAlignment"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleMargin"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitlePadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleTextColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backgroundColor" type="int">
</parameter>
</method>
<method name="setBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="borderColor" type="int">
</parameter>
</method>
<method name="setBorderWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="borderWidth" type="float">
</parameter>
</method>
<method name="setCornerRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cornerRadius" type="float">
</parameter>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="padding" type="float">
</parameter>
</method>
<method name="setRowVerticalMargin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rowVerticalMargin" type="float">
</parameter>
</method>
<method name="setSymbolAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="symbolAlignment" type="com.shinobicontrols.charts.Legend.SymbolAlignment">
</parameter>
</method>
<method name="setSymbolCornerRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="symbolCornerRadius" type="float">
</parameter>
</method>
<method name="setSymbolLabelGap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="symbolLabelGap" type="float">
</parameter>
</method>
<method name="setSymbolWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="symbolWidth" type="float">
</parameter>
</method>
<method name="setSymbolsShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showSymbols" type="boolean">
</parameter>
</method>
<method name="setTextAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textAlignment" type="int">
</parameter>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textColor" type="int">
</parameter>
</method>
<method name="setTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textSize" type="float">
</parameter>
</method>
<method name="setTitleMargin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="margin" type="float">
</parameter>
</method>
<method name="setTitlePadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="padding" type="float">
</parameter>
</method>
<method name="setTitleTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleTextColor" type="int">
</parameter>
</method>
<method name="setTitleTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleTextSize" type="float">
</parameter>
</method>
<method name="setTitleTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleTypeface" type="android.graphics.Typeface">
</parameter>
</method>
<method name="setTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeface" type="android.graphics.Typeface">
</parameter>
</method>
</class>
<class name="LineSeries"
 extends="com.shinobicontrols.charts.CartesianSeries"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LineSeries"
 type="com.shinobicontrols.charts.LineSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="LineSeriesStyle"
 extends="com.shinobicontrols.charts.SeriesStyle"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LineSeriesStyle"
 type="com.shinobicontrols.charts.LineSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getAreaColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaColorBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaColorGradient"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaColorGradientBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaLineColorBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAreaLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFillStyle"
 return="com.shinobicontrols.charts.SeriesStyle.FillStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColorBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPointStyle"
 return="com.shinobicontrols.charts.PointStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectedPointStyle"
 return="com.shinobicontrols.charts.PointStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLineShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAreaColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaColor" type="int">
</parameter>
</method>
<method name="setAreaColorBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaColorBelowBaseline" type="int">
</parameter>
</method>
<method name="setAreaColorGradient"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaColorGradient" type="int">
</parameter>
</method>
<method name="setAreaColorGradientBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaColorGradientBelowBaseline" type="int">
</parameter>
</method>
<method name="setAreaLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaLineColor" type="int">
</parameter>
</method>
<method name="setAreaLineColorBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaLineColorBelowBaseline" type="int">
</parameter>
</method>
<method name="setAreaLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="areaLineWidth" type="float">
</parameter>
</method>
<method name="setFillStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fillStyle" type="com.shinobicontrols.charts.SeriesStyle.FillStyle">
</parameter>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColor" type="int">
</parameter>
</method>
<method name="setLineColorBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColorBelowBaseline" type="int">
</parameter>
</method>
<method name="setLineShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineShown" type="boolean">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineWidth" type="float">
</parameter>
</method>
<method name="setPointStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.PointStyle">
</parameter>
</method>
<method name="setSelectedPointStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.PointStyle">
</parameter>
</method>
</class>
<class name="MainTitleStyle"
 extends="com.shinobicontrols.charts.TitleStyle"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MainTitleStyle"
 type="com.shinobicontrols.charts.MainTitleStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getCentersOn"
 return="com.shinobicontrols.charts.Title.CentersOn"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOverlapsChart"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCentersOn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleCentersOn" type="com.shinobicontrols.charts.Title.CentersOn">
</parameter>
</method>
<method name="setOverlapsChart"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="overlapChartTitle" type="boolean">
</parameter>
</method>
</class>
<interface name="MultiValueData"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getClose"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHigh"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLow"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOpen"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="MultiValueDataPoint"
 extends="com.shinobicontrols.charts.DataPoint"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.shinobicontrols.charts.Data">
</implements>
<implements name="com.shinobicontrols.charts.MultiValueData">
</implements>
<implements name="com.shinobicontrols.charts.SelectableData">
</implements>
<constructor name="MultiValueDataPoint"
 type="com.shinobicontrols.charts.MultiValueDataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="low" type="Tv">
</parameter>
<parameter name="high" type="Tv">
</parameter>
<parameter name="open" type="Tv">
</parameter>
<parameter name="close" type="Tv">
</parameter>
</constructor>
<constructor name="MultiValueDataPoint"
 type="com.shinobicontrols.charts.MultiValueDataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="low" type="Tv">
</parameter>
<parameter name="high" type="Tv">
</parameter>
<parameter name="open" type="Tv">
</parameter>
<parameter name="close" type="Tv">
</parameter>
<parameter name="selected" type="boolean">
</parameter>
</constructor>
<constructor name="MultiValueDataPoint"
 type="com.shinobicontrols.charts.MultiValueDataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="low" type="Tv">
</parameter>
<parameter name="high" type="Tv">
</parameter>
</constructor>
<constructor name="MultiValueDataPoint"
 type="com.shinobicontrols.charts.MultiValueDataPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="Tx">
</parameter>
<parameter name="low" type="Tv">
</parameter>
<parameter name="high" type="Tv">
</parameter>
<parameter name="selected" type="boolean">
</parameter>
</constructor>
<method name="getClose"
 return="Tv"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHigh"
 return="Tv"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLow"
 return="Tv"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOpen"
 return="Tv"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="NumberAxis"
 extends="com.shinobicontrols.charts.Axis"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NumberAxis"
 type="com.shinobicontrols.charts.NumberAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="NumberAxis"
 type="com.shinobicontrols.charts.NumberAxis"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defaultRange" type="com.shinobicontrols.charts.NumberRange">
</parameter>
</constructor>
<method name="getFormattedString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Double">
</parameter>
</method>
<method name="getLabelFormat"
 return="java.text.DecimalFormat"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLabelFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelFormat" type="java.text.DecimalFormat">
</parameter>
</method>
<method name="transformChartValueToUserValue"
 return="java.lang.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="chartValue" type="java.lang.Double">
</parameter>
</method>
<method name="transformUserValueToChartValue"
 return="java.lang.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="userValue" type="java.lang.Double">
</parameter>
</method>
</class>
<class name="NumberRange"
 extends="com.shinobicontrols.charts.Range"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NumberRange"
 type="com.shinobicontrols.charts.NumberRange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="min" type="java.lang.Double">
</parameter>
<parameter name="max" type="java.lang.Double">
</parameter>
</constructor>
<method name="getMaximum"
 return="java.lang.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMinimum"
 return="java.lang.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="OHLCSeries"
 extends="com.shinobicontrols.charts.BarColumnSeries"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OHLCSeries"
 type="com.shinobicontrols.charts.OHLCSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="OHLCSeriesStyle"
 extends="com.shinobicontrols.charts.SeriesStyle"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OHLCSeriesStyle"
 type="com.shinobicontrols.charts.OHLCSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getArmWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFallingColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFallingColorGradient"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRisingColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRisingColorGradient"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrunkWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setArmWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="float">
</parameter>
</method>
<method name="setFallingColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setFallingColorGradient"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setRisingColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setRisingColorGradient"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setTrunkWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="float">
</parameter>
</method>
</class>
<class name="PieDonutSeries"
 extends="com.shinobicontrols.charts.RadialSeries"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCenter"
 return="android.graphics.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDrawDirection"
 return="com.shinobicontrols.charts.PieDonutSeries.DrawDirection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOuterRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRotation"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectedPosition"
 return="java.lang.Float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDrawDirection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="drawDirection" type="com.shinobicontrols.charts.PieDonutSeries.DrawDirection">
</parameter>
</method>
<method name="setDrawDirection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="drawDirection" type="com.shinobicontrols.charts.RadialSeries.DrawDirection">
</parameter>
</method>
<method name="setOuterRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="outerRadius" type="float">
</parameter>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rotation" type="float">
</parameter>
</method>
<method name="setSelectedPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="selectedPosition" type="java.lang.Float">
</parameter>
</method>
</class>
<class name="PieDonutSeries.DrawDirection"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.PieDonutSeries.DrawDirection"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.PieDonutSeries.DrawDirection[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PieDonutSeries.RadialEffect"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getXmlValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.shinobicontrols.charts.PieDonutSeries.RadialEffect"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.PieDonutSeries.RadialEffect[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PieDonutSlice"
 extends="com.shinobicontrols.charts.InternalDataPoint"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCenterAngle"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCenterX"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCenterY"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelBackgroundPaint"
 return="android.graphics.Paint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelCenter"
 return="android.graphics.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelPaint"
 return="android.graphics.Paint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getY"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLabelText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelText" type="java.lang.String">
</parameter>
</method>
</class>
<class name="PieSeries"
 extends="com.shinobicontrols.charts.PieDonutSeries"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PieSeries"
 type="com.shinobicontrols.charts.PieSeries"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="PieSeriesStyle"
 extends="com.shinobicontrols.charts.PieDonutSeriesStyle"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PieSeriesStyle"
 type="com.shinobicontrols.charts.PieSeriesStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="PointStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PointStyle"
 type="com.shinobicontrols.charts.PointStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="arePointsShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColorBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInnerColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInnerColorBelowBaseline"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInnerRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRadius"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
</method>
<method name="setColorBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="colorBelowBaseline" type="int">
</parameter>
</method>
<method name="setInnerColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="innerColor" type="int">
</parameter>
</method>
<method name="setInnerColorBelowBaseline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="innerColorBelowBaseline" type="int">
</parameter>
</method>
<method name="setInnerRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="innerRadius" type="float">
</parameter>
</method>
<method name="setPointsShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showPoints" type="boolean">
</parameter>
</method>
<method name="setRadius"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="radius" type="float">
</parameter>
</method>
</class>
<class name="R"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R"
 type="com.shinobicontrols.charts.R"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="R.attr"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.attr"
 type="com.shinobicontrols.charts.R.attr"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="sc_alternateGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisTitleTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_bandSeriesAreaColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_bandSeriesAreaInvertedColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_bandSeriesHighColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_bandSeriesLowColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_barLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_columnLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairPadding"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipBorderWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipCornerRadius"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipLabelBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_dashedGridLines"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrustColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultSelectedSeriesColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_donutCrustThickness"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialFallingColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialRisingColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_gridLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_gridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_lineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor1"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor2"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor3"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor4"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor5"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutFlavorColor6"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutLabelColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_plotAreaColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor1"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor2"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor3"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor4"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor5"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaColor6"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor1"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor2"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor3"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor4"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor5"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientColor6"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor1"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor2"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor3"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor4"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor5"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesAreaGradientTransparentColor6"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor1"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor2"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor3"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor4"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor5"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_seriesLineColor6"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_showGridLines"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_showGridStripes"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickLabelColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_titleMargin"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_titlePadding"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="R.bool"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.bool"
 type="com.shinobicontrols.charts.R.bool"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="sc_darkShowGridLines"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_dashedGridLines"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultShowGridLines"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_showGridStripes"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="R.color"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.color"
 type="com.shinobicontrols.charts.R.color"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="sc_annotationDarkBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationDarkTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationDefaultBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_annotationDefaultTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisDarkTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisDefaultLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_axisDefaultTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_blueDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_blueDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_blueDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_blueLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartDarkBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartDarkTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartDefaultBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_chartDefaultTitleColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairDarkLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairDefaultLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDarkBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDarkBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDarkLabelBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDarkTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDefaultBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDefaultBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDefaultLabelBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crosshairTooltipDefaultTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_crustColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_darkAlternateGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_darkGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultAlternateGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultSelectedSeriesColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialBlue"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialBlueAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialGreen"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_financialRed"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_greenDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_greenDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_greenDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_greenLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_gridDarkLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_gridDefaultLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDarkBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDarkBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDarkTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDefaultBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDefaultBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_legendDefaultTextColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_orangeDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_orangeDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_orangeDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_orangeLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutLabelDarkColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pieDonutLabelDefaultColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pinkDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pinkDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pinkDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_pinkLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_plotDarkAreaBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_plotDarkAreaColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_plotDefaultAreaBorderColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_plotDefaultAreaColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_purpleDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_purpleDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_purpleDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_purpleLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialBlue"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialGreen"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialOrange"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialPink"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialPurple"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_radialYellow"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickDarkLabelColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickDarkLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickDefaultLabelColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_tickDefaultLineColor"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_yellowDark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_yellowDarkFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_yellowDarkFillAlpha"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_yellowLightFill"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="R.dimen"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.dimen"
 type="com.shinobicontrols.charts.R.dimen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="sc_axisTitleTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultAnnotationTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultBarLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultColumnLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrosshairLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrosshairPadding"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrosshairTooltipBorderWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrosshairTooltipCornerRadius"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultCrosshairTooltipTextSize"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultDonutCrustThickness"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultLineWidth"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultTitleMargin"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="sc_defaultTitlePadding"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="R.style"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.style"
 type="com.shinobicontrols.charts.R.style"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="Theme_Default"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="Theme_Default_Dark"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="Theme_Default_Light"
 type="int"
 transient="false"
 volatile="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="R.styleable"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="R.styleable"
 type="com.shinobicontrols.charts.R.styleable"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="ChartTheme"
 type="int[]"
 transient="false"
 volatile="false"
 value="null"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_alternateGridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_annotationBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 value="72"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_annotationTextColor"
 type="int"
 transient="false"
 volatile="false"
 value="73"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_annotationTextSize"
 type="int"
 transient="false"
 volatile="false"
 value="74"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_axisLineColor"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_axisTitleColor"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_axisTitleTextSize"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_bandSeriesAreaColor"
 type="int"
 transient="false"
 volatile="false"
 value="70"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_bandSeriesAreaInvertedColor"
 type="int"
 transient="false"
 volatile="false"
 value="71"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_bandSeriesHighColor"
 type="int"
 transient="false"
 volatile="false"
 value="68"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_bandSeriesLowColor"
 type="int"
 transient="false"
 volatile="false"
 value="69"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_barLineWidth"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_chartBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_chartTitleColor"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_columnLineWidth"
 type="int"
 transient="false"
 volatile="false"
 value="31"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairLineColor"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairLineWidth"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairPadding"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipBorderColor"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipBorderWidth"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipCornerRadius"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipLabelBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipTextColor"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_crosshairTooltipTextSize"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_dashedGridLines"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_defaultCrustColor"
 type="int"
 transient="false"
 volatile="false"
 value="63"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_defaultSelectedSeriesColor"
 type="int"
 transient="false"
 volatile="false"
 value="30"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_donutCrustThickness"
 type="int"
 transient="false"
 volatile="false"
 value="64"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_financialFallingColor"
 type="int"
 transient="false"
 volatile="false"
 value="67"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_financialRisingColor"
 type="int"
 transient="false"
 volatile="false"
 value="66"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_gridLineColor"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_gridStripeColor"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_legendBackgroundColor"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_legendBorderColor"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_legendTextColor"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_lineWidth"
 type="int"
 transient="false"
 volatile="false"
 value="29"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor1"
 type="int"
 transient="false"
 volatile="false"
 value="57"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor2"
 type="int"
 transient="false"
 volatile="false"
 value="58"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor3"
 type="int"
 transient="false"
 volatile="false"
 value="59"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor4"
 type="int"
 transient="false"
 volatile="false"
 value="60"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor5"
 type="int"
 transient="false"
 volatile="false"
 value="61"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutFlavorColor6"
 type="int"
 transient="false"
 volatile="false"
 value="62"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_pieDonutLabelColor"
 type="int"
 transient="false"
 volatile="false"
 value="65"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_plotAreaColor"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor1"
 type="int"
 transient="false"
 volatile="false"
 value="34"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor2"
 type="int"
 transient="false"
 volatile="false"
 value="38"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor3"
 type="int"
 transient="false"
 volatile="false"
 value="42"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor4"
 type="int"
 transient="false"
 volatile="false"
 value="46"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor5"
 type="int"
 transient="false"
 volatile="false"
 value="50"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaColor6"
 type="int"
 transient="false"
 volatile="false"
 value="54"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor1"
 type="int"
 transient="false"
 volatile="false"
 value="35"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor2"
 type="int"
 transient="false"
 volatile="false"
 value="39"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor3"
 type="int"
 transient="false"
 volatile="false"
 value="43"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor4"
 type="int"
 transient="false"
 volatile="false"
 value="47"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor5"
 type="int"
 transient="false"
 volatile="false"
 value="51"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientColor6"
 type="int"
 transient="false"
 volatile="false"
 value="55"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor1"
 type="int"
 transient="false"
 volatile="false"
 value="36"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor2"
 type="int"
 transient="false"
 volatile="false"
 value="40"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor3"
 type="int"
 transient="false"
 volatile="false"
 value="44"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor4"
 type="int"
 transient="false"
 volatile="false"
 value="48"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor5"
 type="int"
 transient="false"
 volatile="false"
 value="52"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesAreaGradientTransparentColor6"
 type="int"
 transient="false"
 volatile="false"
 value="56"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor1"
 type="int"
 transient="false"
 volatile="false"
 value="33"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor2"
 type="int"
 transient="false"
 volatile="false"
 value="37"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor3"
 type="int"
 transient="false"
 volatile="false"
 value="41"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor4"
 type="int"
 transient="false"
 volatile="false"
 value="45"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor5"
 type="int"
 transient="false"
 volatile="false"
 value="49"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_seriesLineColor6"
 type="int"
 transient="false"
 volatile="false"
 value="53"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_showGridLines"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_showGridStripes"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_tickLabelColor"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_tickLineColor"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_titleMargin"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ChartTheme_sc_titlePadding"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RadialSeries"
 extends="com.shinobicontrols.charts.Series"
 abstract="true"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
</class>
<class name="RadialSeries.DrawDirection"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.RadialSeries.DrawDirection"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.RadialSeries.DrawDirection[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RadialSeries.RadialEffect"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
<method name="getXmlValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.shinobicontrols.charts.RadialSeries.RadialEffect"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.RadialSeries.RadialEffect[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Range"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getSpan"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="SelectableData"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getSelected"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="Series"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getChart"
 return="com.shinobicontrols.charts.ShinobiChart"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDataAdapter"
 return="com.shinobicontrols.charts.DataAdapter&lt;?, ?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectedStyle"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSelectionMode"
 return="com.shinobicontrols.charts.Series.SelectionMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getYAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPointSelected"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
</method>
<method name="isSelected"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isShownInLegend"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDataAdapter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dataAdapter" type="com.shinobicontrols.charts.DataAdapter&lt;?, ?&gt;">
</parameter>
</method>
<method name="setPointSelected"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="selected" type="boolean">
</parameter>
<parameter name="index" type="int">
</parameter>
</method>
<method name="setSelected"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="selected" type="boolean">
</parameter>
</method>
<method name="setSelectedStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="T">
</parameter>
</method>
<method name="setSelectionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="selectionMode" type="com.shinobicontrols.charts.Series.SelectionMode">
</parameter>
</method>
<method name="setShownInLegend"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shownInLegend" type="boolean">
</parameter>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="T">
</parameter>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Series.Orientation"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Series.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Series.Orientation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Series.SelectionMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Series.SelectionMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Series.SelectionMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SeriesStyle"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="SeriesStyle.FillStyle"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.SeriesStyle.FillStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.SeriesStyle.FillStyle[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="ShinobiChart"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addSeries"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
</method>
<method name="addSeries"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
<parameter name="xAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
<parameter name="yAxis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addXAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="addYAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="applyTheme"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="themeResourceID" type="int">
</parameter>
<parameter name="overwrite" type="boolean">
</parameter>
</method>
<method name="getAllXAxes"
 return="java.util.List&lt;com.shinobicontrols.charts.Axis&lt;?, ?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllYAxes"
 return="java.util.List&lt;com.shinobicontrols.charts.Axis&lt;?, ?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAnnotationsManager"
 return="com.shinobicontrols.charts.AnnotationsManager"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCanvasRect"
 return="android.graphics.Rect"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCrosshair"
 return="com.shinobicontrols.charts.Crosshair"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInfo"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLegend"
 return="com.shinobicontrols.charts.Legend"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPlotAreaRect"
 return="android.graphics.Rect"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSeries"
 return="java.util.List&lt;com.shinobicontrols.charts.Series&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSeriesForAxis"
 return="java.util.List&lt;com.shinobicontrols.charts.Series&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="getStyle"
 return="com.shinobicontrols.charts.ChartStyle"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitleStyle"
 return="com.shinobicontrols.charts.MainTitleStyle"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getXAxisForSeries"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
</method>
<method name="getYAxis"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getYAxisForSeries"
 return="com.shinobicontrols.charts.Axis&lt;?, ?&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
</method>
<method name="isRadial"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
</method>
<method name="isSeriesSelectionSingle"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="redrawChart"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeSeries"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
</method>
<method name="removeXAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="removeYAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="requestSnapshot"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLicenseKey"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="licenseKey" type="java.lang.String">
</parameter>
</method>
<method name="setOnAxisMotionStateChangeListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnAxisMotionStateChangeListener">
</parameter>
</method>
<method name="setOnAxisRangeChangeListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnAxisRangeChangeListener">
</parameter>
</method>
<method name="setOnCrosshairListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnCrosshairListener">
</parameter>
</method>
<method name="setOnGestureListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnGestureListener">
</parameter>
</method>
<method name="setOnInternalLayoutListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnInternalLayoutListener">
</parameter>
</method>
<method name="setOnPieDonutSliceLabelDrawListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="onPieDonutSeriesLabelDrawListener" type="com.shinobicontrols.charts.ShinobiChart.OnPieDonutSliceLabelDrawListener">
</parameter>
</method>
<method name="setOnPieDonutSliceUpdateListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="onPieDonutSliceUpdateListener" type="com.shinobicontrols.charts.ShinobiChart.OnPieDonutSliceUpdateListener">
</parameter>
</method>
<method name="setOnSeriesSelectionListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnSeriesSelectionListener">
</parameter>
</method>
<method name="setOnSnapshotDoneListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.shinobicontrols.charts.ShinobiChart.OnSnapshotDoneListener">
</parameter>
</method>
<method name="setSeriesSelectionSingle"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="seriesSelectionIsSingle" type="boolean">
</parameter>
</method>
<method name="setStyle"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="com.shinobicontrols.charts.ChartStyle">
</parameter>
</method>
<method name="setTitle"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
</method>
<method name="setTitleStyle"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="titleStyle" type="com.shinobicontrols.charts.MainTitleStyle">
</parameter>
</method>
<method name="setXAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
<method name="setYAxis"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnAxisMotionStateChangeListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onAxisMotionStateChange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnAxisRangeChangeListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onAxisRangeChange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="axis" type="com.shinobicontrols.charts.Axis&lt;?, ?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnCrosshairListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onCrosshairActivationChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
</method>
<method name="onCrosshairPositionChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnGestureListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onDoubleTapDown"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onDoubleTapUp"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onLongTouchDown"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onLongTouchUp"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onPinch"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="startFocus" type="android.graphics.PointF">
</parameter>
<parameter name="endFocus" type="android.graphics.PointF">
</parameter>
<parameter name="scaleFactor" type="android.graphics.PointF">
</parameter>
</method>
<method name="onPinchEnd"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="focus" type="android.graphics.PointF">
</parameter>
<parameter name="flinging" type="boolean">
</parameter>
<parameter name="scaleFactor" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSecondTouchDown"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
<parameter name="position2" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSecondTouchUp"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
<parameter name="position2" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSingleTouchDown"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSingleTouchUp"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSwipe"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="startPosition" type="android.graphics.PointF">
</parameter>
<parameter name="endPosition" type="android.graphics.PointF">
</parameter>
</method>
<method name="onSwipeEnd"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
<parameter name="position" type="android.graphics.PointF">
</parameter>
<parameter name="flinging" type="boolean">
</parameter>
<parameter name="velocity" type="android.graphics.PointF">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnInternalLayoutListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onInternalLayout"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="chart" type="com.shinobicontrols.charts.ShinobiChart">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnPieDonutSliceLabelDrawListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onDrawLabel"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="canvas" type="android.graphics.Canvas">
</parameter>
<parameter name="slice" type="com.shinobicontrols.charts.PieDonutSlice">
</parameter>
<parameter name="labelBackgroundRect" type="android.graphics.Rect">
</parameter>
<parameter name="series" type="com.shinobicontrols.charts.PieDonutSeries&lt;?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnPieDonutSliceUpdateListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onUpdateSlice"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="slice" type="com.shinobicontrols.charts.PieDonutSlice">
</parameter>
<parameter name="series" type="com.shinobicontrols.charts.PieDonutSeries&lt;?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnSeriesSelectionListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onPointSelectionStateChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
<parameter name="indexInSeries" type="int">
</parameter>
</method>
<method name="onSeriesSelectionStateChanged"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="series" type="com.shinobicontrols.charts.Series&lt;?&gt;">
</parameter>
</method>
</interface>
<interface name="ShinobiChart.OnSnapshotDoneListener"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onSnapshotDone"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bitmap" type="android.graphics.Bitmap">
</parameter>
</method>
</interface>
<class name="SimpleDataAdapter"
 extends="com.shinobicontrols.charts.DataAdapter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SimpleDataAdapter"
 type="com.shinobicontrols.charts.SimpleDataAdapter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="SupportChartFragment"
 extends="com.shinobicontrols.charts.SupportChartFragmentBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SupportChartFragment"
 type="com.shinobicontrols.charts.SupportChartFragment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getShinobiChart"
 return="com.shinobicontrols.charts.ShinobiChart"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateView"
 return="android.view.View"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="inflater" type="android.view.LayoutInflater">
</parameter>
<parameter name="container" type="android.view.ViewGroup">
</parameter>
<parameter name="savedInstanceState" type="android.os.Bundle">
</parameter>
</method>
<method name="onDestroyView"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TickMark"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="TickMark.ClippingMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.TickMark.ClippingMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.TickMark.ClippingMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TickMark.Orientation"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getXmlValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.shinobicontrols.charts.TickMark.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.TickMark.Orientation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TickStyle"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TickStyle"
 type="com.shinobicontrols.charts.TickStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="areLabelsShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="areMajorTicksShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="areMinorTicksShown"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelOrientation"
 return="com.shinobicontrols.charts.TickMark.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelTextShadowColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLabelTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineLength"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineWidth"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTickGap"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLabelColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelColor" type="int">
</parameter>
</method>
<method name="setLabelOrientation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tickLabelOrientation" type="com.shinobicontrols.charts.TickMark.Orientation">
</parameter>
</method>
<method name="setLabelTextShadowColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelTextShadowColor" type="int">
</parameter>
</method>
<method name="setLabelTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelTextSize" type="float">
</parameter>
</method>
<method name="setLabelTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="labelTypeface" type="android.graphics.Typeface">
</parameter>
</method>
<method name="setLabelsShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showLabels" type="boolean">
</parameter>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineColor" type="int">
</parameter>
</method>
<method name="setLineLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineLength" type="float">
</parameter>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lineWidth" type="float">
</parameter>
</method>
<method name="setMajorTicksShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showTicks" type="boolean">
</parameter>
</method>
<method name="setMinorTicksShown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showTicks" type="boolean">
</parameter>
</method>
<method name="setTickGap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tickGap" type="float">
</parameter>
</method>
</class>
<class name="Title"
 extends="android.widget.TextView"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="Title.CentersOn"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.shinobicontrols.charts.Title.CentersOn"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Title.CentersOn[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Title.Orientation"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getXmlValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.shinobicontrols.charts.Title.Orientation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Title.Orientation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Title.Position"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getXmlValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.shinobicontrols.charts.Title.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.shinobicontrols.charts.Title.Position[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TitleStyle"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TitleStyle"
 type="com.shinobicontrols.charts.TitleStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getBackgroundColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMargin"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPadding"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPosition"
 return="com.shinobicontrols.charts.Title.Position"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextColor"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextSize"
 return="float"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeface"
 return="android.graphics.Typeface"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backgroundColor" type="int">
</parameter>
</method>
<method name="setMargin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="margin" type="float">
</parameter>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="padding" type="float">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="position" type="com.shinobicontrols.charts.Title.Position">
</parameter>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textColor" type="int">
</parameter>
</method>
<method name="setTextSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="textSize" type="float">
</parameter>
</method>
<method name="setTypeface"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeface" type="android.graphics.Typeface">
</parameter>
</method>
</class>
</package>
</api>
